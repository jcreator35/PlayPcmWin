//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18052
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WasapiBitmatchChecker.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WasapiBitmatchChecker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Start に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string buttonStart {
            get {
                return ResourceManager.GetString("buttonStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string buttonStop {
            get {
                return ResourceManager.GetString("buttonStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Buffer size に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxBufferSize {
            get {
                return ResourceManager.GetString("groupBoxBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Data feed mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxDataFeed {
            get {
                return ResourceManager.GetString("groupBoxDataFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Test data pattern に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxDataPattern {
            get {
                return ResourceManager.GetString("groupBoxDataPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Log に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxLog {
            get {
                return ResourceManager.GetString("groupBoxLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM data settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxPcmDataSettings {
            get {
                return ResourceManager.GetString("groupBoxPcmDataSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxPcmFormat {
            get {
                return ResourceManager.GetString("groupBoxPcmFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playback settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxPlayback {
            get {
                return ResourceManager.GetString("groupBoxPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playback device に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxPlaybackDevice {
            get {
                return ResourceManager.GetString("groupBoxPlaybackDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxRecording {
            get {
                return ResourceManager.GetString("groupBoxRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording device に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxRecordingDevice {
            get {
                return ResourceManager.GetString("groupBoxRecordingDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sample rate に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string groupBoxSampleRate {
            get {
                return ResourceManager.GetString("groupBoxSampleRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM size: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string labelPcmSize {
            get {
                return ResourceManager.GetString("labelPcmSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error. Captured data size was not sufficient to analyze.
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgCompareCaptureTooSmall {
            get {
                return ResourceManager.GetString("msgCompareCaptureTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Captured data was different from rendered data!
        ///  PCM size played = {0} MiB ({1} Mbit). Tested PCM Duration = {2} seconds
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgCompareDifferent {
            get {
                return ResourceManager.GetString("msgCompareDifferent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Test succeeded! Captured data was exactly the same as rendered data.
        ///  PCM size played = {0} MiB ({1} Mbit). Tested PCM Duration = {2} seconds
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgCompareIdentical {
            get {
                return ResourceManager.GetString("msgCompareIdentical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM data received. Now comparing recorded PCM with sent PCM...
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgCompareStarted {
            get {
                return ResourceManager.GetString("msgCompareStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error. Test start marker was not found in recorded PCM
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgCompareStartNotFound {
            get {
                return ResourceManager.GetString("msgCompareStartNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM size must be greater than or equals to 1 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPcmSizeError {
            get {
                return ResourceManager.GetString("msgPcmSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCM size must be smaller than or equal to {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPcmSizeTooLarge {
            get {
                return ResourceManager.GetString("msgPcmSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playback buffer size parse error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlayBufferSizeError {
            get {
                return ResourceManager.GetString("msgPlayBufferSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playback buffer size must be smaller than 1000 ms に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlayBufferSizeTooLarge {
            get {
                return ResourceManager.GetString("msgPlayBufferSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error. Playback device select failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlayDeviceSelectError {
            get {
                return ResourceManager.GetString("msgPlayDeviceSelectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playing device state is changed: {0} 
        ///Exiting program... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlayDeviceStateChanged {
            get {
                return ResourceManager.GetString("msgPlayDeviceStateChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///     Playback:  {0}, buffer size={1}ms, {2}, {3}
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlaySettings {
            get {
                return ResourceManager.GetString("msgPlaySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playback Setup error. {0}Hz {1} {2}ch ProAudio Exclusive {3} {4}ms に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgPlaySetupError {
            get {
                return ResourceManager.GetString("msgPlaySetupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording buffer size parse error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecBufferSizeError {
            get {
                return ResourceManager.GetString("msgRecBufferSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording buffer size must be smaller than 1000 ms に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecBufferSizeTooLarge {
            get {
                return ResourceManager.GetString("msgRecBufferSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error. Recording device select failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecDeviceSelectError {
            get {
                return ResourceManager.GetString("msgRecDeviceSelectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording device state is changed: {0} 
        ///Exiting program... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecDeviceStateChanged {
            get {
                return ResourceManager.GetString("msgRecDeviceStateChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///     Recording: {0}, buffer size={1}ms, {2}, {3}
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecSettings {
            get {
                return ResourceManager.GetString("msgRecSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording Setup error. {0}Hz {1} {2}ch ProAudio Exclusive {3} {4}ms に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgRecSetupError {
            get {
                return ResourceManager.GetString("msgRecSetupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error. Could not receive Sync signal. Check your S/PDIF cabling.
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgSyncError {
            get {
                return ResourceManager.GetString("msgSyncError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Test started. SampleRate={0}Hz, PCM data duration={1} seconds.
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msgTestStarted {
            get {
                return ResourceManager.GetString("msgTestStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Event driven に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonEventDriven {
            get {
                return ResourceManager.GetString("radioButtonEventDriven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Random sequence に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonPcmRandom {
            get {
                return ResourceManager.GetString("radioButtonPcmRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Integer 16-bit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonSint16 {
            get {
                return ResourceManager.GetString("radioButtonSint16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Integer 24-bit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonSint24 {
            get {
                return ResourceManager.GetString("radioButtonSint24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Integer 32-bit, valid bits=24 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonSint32v24 {
            get {
                return ResourceManager.GetString("radioButtonSint32v24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Timer driven に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string radioButtonTimerDriven {
            get {
                return ResourceManager.GetString("radioButtonTimerDriven", resourceCulture);
            }
        }
    }
}
