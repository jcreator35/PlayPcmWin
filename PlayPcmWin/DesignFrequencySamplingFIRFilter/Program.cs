using System;

namespace DesignFrequencySamplingFIRFilter {
    class Program {
        void Run(int M, double[] filterGain) {
            // calculated by Excel
            var c = new CalcFrequencySamplingFilterCoeffs();
            var h = c.Calc(M, filterGain);

            Console.WriteLine("M={0} FIR filter coeffs:", M);
            for (int i = 0; i < h.Length; ++i) {
                Console.WriteLine("{0:G17}, ", h[i]);
            }

            // calc frequency response
            Console.WriteLine("M={0} Frequency(kHz),M={0} Gain(dB)", M);
            double fs = 44100;
            for (double f = 0; f < fs / 2; f += 1000) {
                var fr = new CalcFIRFilterFrequencyResponse();
                double ω = 2.0 * Math.PI * f / fs;
                var gain = fr.Calc(h, ω);
                double gainDB = 20.0 * Math.Log10(gain.Magnitude());

                Console.WriteLine("{0},{1}", f / 1000, gainDB);
            }

            Console.WriteLine("");
        }

        static void Main(string[] args) {
            var self = new Program();
            self.Run(43, new double[] {
                1,
                0.947639329,
                0.851584921,
                0.748982995,
                0.658117048,
                0.584703682,
                0.528230716,
                0.485836634,
                0.454190091,
                0.430261165,
                0.411592965,
                0.396376901,
                0.383446317,
                0.372213629,
                0.362548032,
                0.354591823,
                0.348518311,
                0.344228271,
                0.340967459,
                0.336852293,
                0.328378045,
                0.310252444, });

            self.Run(37, new double[] {
                1,
                0.933804354,
                0.817805776,
                0.702748867,
                0.608463391,
                0.537734328,
                0.486826395,
                0.450566267,
                0.424255982,
                0.404258088,
                0.388119104,
                0.37451066,
                0.363028693,
                0.353842729,
                0.34719908,
                0.342770511,
                0.338806735,
                0.331098821,
                0.3122303,
            });

            self.Run(33, new double[] {
                1,
                0.921039852,
                0.788655492,
                0.665682072,
                0.571387511,
                0.504844831,
                0.459288011,
                0.427760316,
                0.404797932,
                0.386789274,
                0.371897453,
                0.359695479,
                0.350505498,
                0.344446911,
                0.340151227,
                0.333070099,
                0.313866027,
            });

            self.Run(31, new double[] {
                1,
                0.913144837,
                0.771526701,
                0.645060549,
                0.551794814,
                0.488212371,
                0.445758947,
                0.416589435,
                0.395039165,
                0.377816059,
                0.363703603,
                0.352840753,
                0.345574868,
                0.34086211,
                0.334096209,
                0.314806629,
            });

            self.Run(29, new double[] {
                1,
                0.90394611,
                0.752386614,
                0.622991679,
                0.531635407,
                0.471622392,
                0.432455867,
                0.405491799,
                0.385121127,
                0.368700031,
                0.355832482,
                0.34701442,
                0.341629011,
                0.335143895,
                0.315845362,
            });

            self.Run(27, new double[] {
                1,
                0.893144653,
                0.730973788,
                0.599479869,
                0.511066124,
                0.455207449,
                0.419371436,
                0.394337263,
                0.374976523,
                0.359695479,
                0.348902998,
                0.342495451,
                0.33620803,
                0.316997354,
            });

            self.Run(25, new double[] {
                1,
                0.880354336,
                0.707010472,
                0.574589409,
                0.490291858,
                0.439078084,
                0.406416637,
                0.382966565,
                0.364719751,
                0.351437316,
                0.343534498,
                0.337283705,
                0.318280599,
            });

            self.Run(23, new double[]{
                1,
                0.865072057,
                0.680218547,
                0.54847062,
                0.469558334,
                0.423277197,
                0.393400041,
                0.371310149,
                0.354899373,
                0.344867611,
                0.338368919,
                0.319716443,
            });

            self.Run(21, new double[] {
                1,
                0.846637142,
                0.650350788,
                0.52139031,
                0.449121072,
                0.407710956,
                0.380076664,
                0.359695479,
                0.346695706,
                0.339470909,
                0.321329981,
            });

            self.Run(19, new double[] {
                1,
                0.824177354,
                0.617247694,
                0.493758418,
                0.429166096,
                0.392085172,
                0.366421275,
                0.349350606,
                0.340620471,
                0.323150119,
            });

            self.Run(17, new double[] {
                1,
                0.796541033,
                0.580934801,
                0.466125049,
                0.409651925,
                0.376000318,
                0.353380586,
                0.341903906,
                0.325208692,
            });

            self.Run(9, new double[] {
                1,
                0.599479869,
                0.419371436,
                0.359695479,
                0.33620803,
            });

#if false
            var h = c.Calc(15, new double[] { 1, 1, 1, 1, 0.4, 0, 0, 0 });
            for (int i=0;i<h.Length;++i) {
                Console.WriteLine("{0}, ", h[i]);
            }
#endif
        }
    }
}
