//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18052
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WWDistortionNoise.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WWDistortionNoise.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Add new filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonAddNewFilter {
            get {
                return ResourceManager.GetString("ButtonAddNewFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Browse... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonBrowseB {
            get {
                return ResourceManager.GetString("ButtonBrowseB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   B_rowse... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonBrowseR {
            get {
                return ResourceManager.GetString("ButtonBrowseR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonDeleteSelected {
            get {
                return ResourceManager.GetString("ButtonDeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonEditSelected {
            get {
                return ResourceManager.GetString("ButtonEditSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Load settings... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonLoadSettings {
            get {
                return ResourceManager.GetString("ButtonLoadSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move down selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonMoveDownSelected {
            get {
                return ResourceManager.GetString("ButtonMoveDownSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Move up selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonMoveUpSelected {
            get {
                return ResourceManager.GetString("ButtonMoveUpSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save settings as... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonSaveSettingsAs {
            get {
                return ResourceManager.GetString("ButtonSaveSettingsAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   _Start conversion に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonStartConversion {
            get {
                return ResourceManager.GetString("ButtonStartConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use this filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ButtonUseThisFilter {
            get {
                return ResourceManager.GetString("ButtonUseThisFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FFT Upsampler に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CbItemFftUpsampler {
            get {
                return ResourceManager.GetString("CbItemFftUpsampler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2nd order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CbItemNoiseShaping2nd {
            get {
                return ResourceManager.GetString("CbItemNoiseShaping2nd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   4th order に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CbItemNoiseShaping4th {
            get {
                return ResourceManager.GetString("CbItemNoiseShaping4th", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zero-Order Hold Upsampler に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CbItemZohUpsampler {
            get {
                return ResourceManager.GetString("CbItemZohUpsampler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dropped data is not file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DroppedDataIsNotFile {
            get {
                return ResourceManager.GetString("DroppedDataIsNotFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filter file version mismatch. expected version={0}, file version={1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorFilterFileVersionMismatch {
            get {
                return ResourceManager.GetString("ErrorFilterFileVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input gain value in number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorGainValueIsNan {
            get {
                return ResourceManager.GetString("ErrorGainValueIsNan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input gain value larger than 0.0 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorGainValueIsTooSmall {
            get {
                return ResourceManager.GetString("ErrorGainValueIsTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input Low pass filter cutoff frequency in number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorLpfCutoffFreqIsNan {
            get {
                return ResourceManager.GetString("ErrorLpfCutoffFreqIsNan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input Low pass filter cutoff frequency larger than 0.0 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorLpfCutoffFreqIsNegative {
            get {
                return ResourceManager.GetString("ErrorLpfCutoffFreqIsNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input Low pass filter slope in number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorLpfSlopeIsNan {
            get {
                return ResourceManager.GetString("ErrorLpfSlopeIsNan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please input Low pass filter slope larger than 1 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorLpfSlopeIsTooSmall {
            get {
                return ResourceManager.GetString("ErrorLpfSlopeIsTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prease input Target Quantization Bit Rate in number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorNoiseShapingBitIsNan {
            get {
                return ResourceManager.GetString("ErrorNoiseShapingBitIsNan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Prease input Target Quantization Bit Rate in integer in the range of 1 to 23 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorNoiseShapingBitIsOutOfRange {
            get {
                return ResourceManager.GetString("ErrorNoiseShapingBitIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output data becomes too large! {0} Gbytes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorOutputDataTooLarge {
            get {
                return ResourceManager.GetString("ErrorOutputDataTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RPDF Jitter Amount must be 0 or larger value に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorRpdfJitterAmount {
            get {
                return ResourceManager.GetString("ErrorRpdfJitterAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Too large magnitude sample detected! channel={0}, magnitude={1:0.000}
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorSampleValueClipped {
            get {
                return ResourceManager.GetString("ErrorSampleValueClipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sinusoidal Jitter Amount must be 0 or larger value に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorSinusolidalJitterAmount {
            get {
                return ResourceManager.GetString("ErrorSinusolidalJitterAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sinusoidal Jitter Freq must be 0 or larger value に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorSinusolidalJitterFreq {
            get {
                return ResourceManager.GetString("ErrorSinusolidalJitterFreq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   TPDF Jitter Amount must be 0 or larger value に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorTpdfJitterAmount {
            get {
                return ResourceManager.GetString("ErrorTpdfJitterAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please specify different file to write. WWAudioFilter cannot write to input file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorWriteToReadFile {
            get {
                return ResourceManager.GetString("ErrorWriteToReadFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FFT upsample: {0}x, FFT length={1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterFftUpsampleDesc {
            get {
                return ResourceManager.GetString("FilterFftUpsampleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC files|*.flac に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterFlacFiles {
            get {
                return ResourceManager.GetString("FilterFlacFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gain : {0}x ({1:0.00}dB) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterGainDesc {
            get {
                return ResourceManager.GetString("FilterGainDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add Jitter : Sinusoidal={0}Hz {1}ns, TPDF={2}ns,  RPDF={3}ns, Filter Length={4} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterJitterAddDesc {
            get {
                return ResourceManager.GetString("FilterJitterAddDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LPF : Cutoff={0}Hz, slope={1}db/oct, FIR length={2} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterLpfDesc {
            get {
                return ResourceManager.GetString("FilterLpfDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2nd order MASH noise shaping: targetBitsPerSample={0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterMashDesc {
            get {
                return ResourceManager.GetString("FilterMashDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   4th order noise shaping: targetBitsPerSample={0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterNoiseShaping4thDesc {
            get {
                return ResourceManager.GetString("FilterNoiseShaping4thDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Noise shaping: order={0}, targetBitsPerSample={1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterNoiseShapingDesc {
            get {
                return ResourceManager.GetString("FilterNoiseShapingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC files|*.flac|DSF files|*.dsf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterWriteAudioFiles {
            get {
                return ResourceManager.GetString("FilterWriteAudioFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   WWAudioFilter files|*.wwaf に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterWWAFilterFiles {
            get {
                return ResourceManager.GetString("FilterWWAFilterFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zero order hold upsample: {0}x に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilterZOHDesc {
            get {
                return ResourceManager.GetString("FilterZOHDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC header corrupted に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorBadHeader {
            get {
                return ResourceManager.GetString("FlacErrorBadHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC bad parameter error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorBadParams {
            get {
                return ResourceManager.GetString("FlacErrorBadParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC buffer size mismatch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorBufferSizeMismatch {
            get {
                return ResourceManager.GetString("FlacErrorBufferSizeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Data not ready に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorDataNotReady {
            get {
                return ResourceManager.GetString("FlacErrorDataNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC decoder process failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorDecoderProcessFailed {
            get {
                return ResourceManager.GetString("FlacErrorDecoderProcessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC encoder error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorEncoder {
            get {
                return ResourceManager.GetString("FlacErrorEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC encoder process failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorEncoderProcessFailed {
            get {
                return ResourceManager.GetString("FlacErrorEncoderProcessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC file read open error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorFileReadOpen {
            get {
                return ResourceManager.GetString("FlacErrorFileReadOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC frame CRC mismatch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorFrameCrcMismatch {
            get {
                return ResourceManager.GetString("FlacErrorFrameCrcMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Internal error (id not found) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorIdNotFound {
            get {
                return ResourceManager.GetString("FlacErrorIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC bits per sample error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorInvalidBitsPerSample {
            get {
                return ResourceManager.GetString("FlacErrorInvalidBitsPerSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC metadata error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorInvalidMetadata {
            get {
                return ResourceManager.GetString("FlacErrorInvalidMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC number of channels is invalid (must be smaller than or equal to 8) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorInvalidNumberOfChannels {
            get {
                return ResourceManager.GetString("FlacErrorInvalidNumberOfChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC sample rate is out of range (must be smaller than or equal to 655,350Hz) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorInvalidSampleRate {
            get {
                return ResourceManager.GetString("FlacErrorInvalidSampleRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC lost sync error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorLostSync {
            get {
                return ResourceManager.GetString("FlacErrorLostSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC memory exhausted に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorMemoryExhausted {
            get {
                return ResourceManager.GetString("FlacErrorMemoryExhausted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC number of frames is not aligned に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorNumFrameIsNotAligned {
            get {
                return ResourceManager.GetString("FlacErrorNumFrameIsNotAligned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC other error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorOther {
            get {
                return ResourceManager.GetString("FlacErrorOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output data size exceeds 2GB per channel! Process aborted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorOutputFileTooLarge {
            get {
                return ResourceManager.GetString("FlacErrorOutputFileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC receive buffer size is insufficient に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorRecvBufferSizeInsufficient {
            get {
                return ResourceManager.GetString("FlacErrorRecvBufferSizeInsufficient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC stream decoder init failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorStreamDecoderInitFailed {
            get {
                return ResourceManager.GetString("FlacErrorStreamDecoderInitFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC stream decoder new failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorStreamDecoderNewFailed {
            get {
                return ResourceManager.GetString("FlacErrorStreamDecoderNewFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FLAC unparseable error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacErrorUnparseable {
            get {
                return ResourceManager.GetString("FlacErrorUnparseable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write open failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FlacerrorWriteOpenFailed {
            get {
                return ResourceManager.GetString("FlacerrorWriteOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Filter settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupFilterSettings {
            get {
                return ResourceManager.GetString("GroupFilterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gain に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupGain {
            get {
                return ResourceManager.GetString("GroupGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Input file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupInputFile {
            get {
                return ResourceManager.GetString("GroupInputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Log に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupLog {
            get {
                return ResourceManager.GetString("GroupLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FIR Linear-Phase Low pass Filter に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupLPF {
            get {
                return ResourceManager.GetString("GroupLPF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Noise Shaping に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupNoiseShaping {
            get {
                return ResourceManager.GetString("GroupNoiseShaping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output File に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupOutputFile {
            get {
                return ResourceManager.GetString("GroupOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Upsampler に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GroupUpsampler {
            get {
                return ResourceManager.GetString("GroupUpsampler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cutoff frequency: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelCutoffFreq {
            get {
                return ResourceManager.GetString("LabelCutoffFreq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FIR filter length: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelFilterLength {
            get {
                return ResourceManager.GetString("LabelFilterLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gain in Amplitude: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelGainInAmplitude {
            get {
                return ResourceManager.GetString("LabelGainInAmplitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gain in dB: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelGainInDb {
            get {
                return ResourceManager.GetString("LabelGainInDb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Gain roll off slopes: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelGainRolloffSlopes {
            get {
                return ResourceManager.GetString("LabelGainRolloffSlopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Input file: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelInputFile {
            get {
                return ResourceManager.GetString("LabelInputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Noise shaping method: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelNoiseShapingMethod {
            get {
                return ResourceManager.GetString("LabelNoiseShapingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Target Quantized Bit Rate: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelNoiseShapingTargetBit {
            get {
                return ResourceManager.GetString("LabelNoiseShapingTargetBit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output file: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelOutputFile {
            get {
                return ResourceManager.GetString("LabelOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   samples に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelSamples {
            get {
                return ResourceManager.GetString("LabelSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FFT Length: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelUpsamplerLength {
            get {
                return ResourceManager.GetString("LabelUpsamplerLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Upsampler Type: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelUpsamplerType {
            get {
                return ResourceManager.GetString("LabelUpsamplerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Upsampling factor: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelUpsamplingFactor {
            get {
                return ResourceManager.GetString("LabelUpsamplingFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   x に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LabelX {
            get {
                return ResourceManager.GetString("LabelX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Completed.
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LogCompleted {
            get {
                return ResourceManager.GetString("LogCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Read completed. now processing...
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LogFileReadCompleted {
            get {
                return ResourceManager.GetString("LogFileReadCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reading file {0} ...
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LogFileReadStarted {
            get {
                return ResourceManager.GetString("LogFileReadStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Process completed. now writing to {0} ...
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LogfileWriteStarted {
            get {
                return ResourceManager.GetString("LogfileWriteStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Nothing to store. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NothingToStore {
            get {
                return ResourceManager.GetString("NothingToStore", resourceCulture);
            }
        }
    }
}
